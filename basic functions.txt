current: 1.3A(peak), 0.92A (RMS)
1.8 degree (200 step per resolutions for motor)
lead screw: 1 mm per revolution 
micro step: 16
200*16/1=3200 steps per millimeter
M92 set axis steps-per-unit

200

M17 X  ; enable X axis
G21 ; set units to millimeters
G91 ; Set all axes to relative
M92 X3200 'set axis steps-per-unit
M906 X920 'set current
G0 X5 F120 'F: federate  units/minute
https://www.omc-stepperonline.com/nema-11-stepper-motor-bipolar-l-51mm-w-gear-ratio-27-1-planetary-gearbox-11hs20-0674s-pg27
ratio: 26.85:1 

200*26.85*16=85920 steps/rev
n=pump's volumn/rev (ml/rev)
(200*26.85*16)/n =85920/n  Steps per mL
200*16=3200

M17 Z  ; enable X axis
G21 ; set units to millimeters
G91 ; Set all axes to relative
M92 Z85920 'set axis steps-per-unit
M906 Z670 'set current
G0 Z1 F10 'F: federate  units/minute, rotate 1 rev

M18 disable motors
M410 quick stop

G28
M428 set current position as home position （ assigning the current position as the native home position）

Set the X homing feedrate to 2400 mm/min
M210 X2400

M211 - Software Endstops

SET HOMING:
用堵转检测的 Home 设置步骤
1. 硬件要求
确保你的步进驱动器支持堵转检测功能。常见的支持堵转检测的驱动器包括：

TMC 系列驱动器（如 TMC2130、TMC2209、TMC5160 等）
支持 StallGuard 或类似功能的驱动器
这些驱动器可以通过监控电机的负载变化（如堵转时电流的增大）来检测硬限位。

2. 配置 Marlin 固件
启用堵转检测功能： 在 Marlin 的 Configuration_adv.h 文件中，找到以下设置，并启用堵转检测：

#define SENSORLESS_HOMING
这将允许使用步进驱动器的堵转检测功能进行归零操作。

为 X 和 Y 配置堵转检测： 在 Configuration_adv.h 文件中，找到与 TMC 驱动器设置相关的部分，为 X 和 Y 轴启用堵转归零：


#define X_STALL_SENSITIVITY 8  // X 轴堵转灵敏度，值越低越灵敏
#define Y_STALL_SENSITIVITY 8  // Y 轴堵转灵敏度，值越低越灵敏
灵敏度调整：
数值范围通常为 0–255，值越低越容易检测堵转，但过低可能导致误触发。
根据实际情况调试一个合适的值。
禁用 X 和 Y 的限位开关： 在 Configuration.h 文件中，注释掉未安装限位开关的轴：

//#define USE_XMIN_PLUG
//#define USE_YMIN_PLUG
设置 Home 方向： 根据滑台硬限位的位置设置 Home 方向：

#define X_HOME_DIR -1  // 如果硬限位在 X 轴－方向
#define Y_HOME_DIR -1  // 如果硬限位在 Y 轴-方向
启用堵转保护的归零范围： 在 Configuration_adv.h 中，确保启用以下设置，限制 Home 动作的最大移动范围以防意外：

#define HOMING_BUMP_MM { 2, 2, 2 }  // X、Y 和 Z 轴回退距离
#define HOMING_BACKOFF_MM { 10, 10 } // 归零后回退的距离

// Homing speeds (mm/min)
#define HOMING_FEEDRATE_MM_M { (2*60), (2*60), (2*60) }

3. 自动 Home 流程
测试堵转灵敏度：

上传固件后，通过 G-code 指令测试堵转检测：
gcode
Copy code
M914 X8 Y8  // 设置堵转灵敏度为 8（可调）
手动移动滑台靠近硬限位，并尝试归零：
gcode
Copy code
G28 X
G28 Y
调试堵转灵敏度： 如果归零不准确或检测不到堵转：

减小堵转灵敏度值（如改为 M914 X5 Y5）。
确保滑台的运行速度合适，速度过快可能导致堵转检测失败。
4. 常见问题和解决
堵转检测失败：

检查驱动器是否正确安装并支持堵转检测。
确保驱动器启用了适当的电流设置，电流过低可能导致无法正确检测堵转。
误触发：

如果在滑台未到硬限位前检测到堵转，可能是灵敏度过高或滑台有机械卡顿。
增大堵转灵敏度值，或者清理并润滑滑台。
5. 归零完成后设置坐标
归零完成后，Marlin 默认会将硬限位点设为 (0,0)。如果你需要调整原点位置，可以通过以下命令或固件配置完成：

偏移设置： 归零完成后发送：

gcode
Copy code
G92 X10 Y10  // 设置当前点为 (10,10)
保存偏移： 在固件中配置 MANUAL_X_HOME_POS 和 MANUAL_Y_HOME_POS。

总结
通过 堵转检测 设置硬限位为 Home 是一个实用的方案。核心步骤包括：

确保驱动器支持堵转检测。
启用 SENSORLESS_HOMING 并调整灵敏度。
使用 G28 自动归零到硬限位。
如果仍有问题或需要进一步调整，描述具体的硬件和问题，我可以提供更多帮助！

记录： 设置了#define HOMING_BACKOFF_POST_MM { 15, 7, 2 }  // (mm) Backoff from endstops after homing

M154 report position
SA: 13mm travel 13/2=6.5mm
SF: 30mm travel 30/2=15mm
M500 store current setting  into the EEPROM (Electrically Erasable Programmable Read-Only Memory) of the board

M502 reset to factory set, meaning use firmware setting
M500 save
M503

max current setting?
in src/core/serial.h :inline void SERIAL_ECHO_F(EnsureDouble x, int digit=4) { SERIAL_IMPL.print(x, digit); }

SERIAL_ECHO_F(current_position[X_AXIS], 6);  // Print with 6 decimal places


in src/gcode/host/M114.cpp: void report_all_axis_pos(const xyze_pos_t &pos, const uint8_t n=XYZE, const uint8_t precision=6)

 void report_linear_axis_pos(const xyz_pos_t &pos, const uint8_t precision=6)

#define X_CURRENT_HOME  X_CURRENT / 2

 Use 'M211' to set software endstops on/off or report current state
M211 S0 disable software endstop
M914 X<值> Y<值> Z<值> 更改堵转检测灵敏度

解掉注释
#define SERIAL_FLOAT_PRECISION 3